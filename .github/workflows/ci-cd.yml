name: CI-CD Pipeline

on:
  push:
    branches:
      - TESTES
  pull_request:
    branches:
      - TESTES

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

  install_dependencies:
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'
          
      - name: Install dependencies
        run: |
         cd sample-nodejs-app
         npm install

  build:
    runs-on: ubuntu-latest
    needs: install_dependencies
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Build application
        run: |
         cd sample-nodejs-app
         npm run build


  sonar_scan:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Run SonarQube Scan
        uses: SonarSource/sonarcloud-github-action@v3.1.0
        with:
          args: >
            -Dsonar.projectKey=Vmoralles_first-pipeline
            -Dsonar.organization=vmoralles
            -Dsonar.sources=.
            -Dsonar.host.url=https://sonarcloud.io
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  dockerize:
    runs-on: ubuntu-latest
    needs: sonar_scan
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Log in to Docker HUB
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      - name: Build Docker image
        run: |
          cd sample-nodejs-app
          docker build -t  ${{ secrets.DOCKER_USERNAME }}/nodeimage:v1 .
          docker run -d -p 3000:3000 mvittu/nodeimage:v1
      - name: Push to Docker HUb
        run: docker push ${{ secrets.DOCKER_USERNAME }}/nodeimage:v1    

  deploy:
    runs-on: ubuntu-latest
    needs: dockerize
    steps:
     - name: deploy to EC2 via ssh
       uses: appleboy/ssh-action@v0.1.7
       with:
         host: ${{ secrets.EC2_HOST }}
         username: ubuntu
         key: ${{ secrets.EC2_SSH_KEY }}
         script: |
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/nodeimage:v1
            sudo docker run -d -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/nodeimage:v1
